{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    add(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => {\n        return item.id === newItem.id;\n      });\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += existingItem.price;\n      }\n    },\n    remove(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {} else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","add","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","remove","cartActions","actions","reducer"],"sources":["C:/Users/Kapetan Mixalis/ReactApps/shop-app/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState:{\r\n        items: [],\r\n        totalQuantity: 0\r\n    },\r\n    reducers:{\r\n        add( state, action){\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find( (item) => {\r\n                return item.id === newItem.id\r\n            });\r\n\r\n            if( !existingItem){\r\n                state.items.push({ \r\n                    id: newItem.id, \r\n                    name: newItem.name,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price\r\n                });\r\n            }else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice += existingItem.price;\r\n            }\r\n        },\r\n        remove( state, action){\r\n            const id = action.payload;\r\n            const existingItem = state.items.find( item => item.id === id);\r\n            if( existingItem.quantity === 1){\r\n\r\n            }else{\r\n                existingItem.quantity--;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAC;IACTC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAC;IACLC,GAAGA,CAAEC,KAAK,EAAEC,MAAM,EAAC;MACf,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAGC,IAAI,IAAK;QAC7C,OAAOA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE;MACjC,CAAC,CAAC;MAEF,IAAI,CAACH,YAAY,EAAC;QACdJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdb,IAAI,EAAEQ,OAAO,CAACR,IAAI;UAClBe,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO;QACxB,CAAC,CAAC;MACN,CAAC,MAAI;QACDL,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,IAAIP,YAAY,CAACK,KAAK;MACjD;IACJ,CAAC;IACDG,MAAMA,CAAEZ,KAAK,EAAEC,MAAM,EAAC;MAClB,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC9D,IAAIH,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC,CAEhC,CAAC,MAAI;QACDN,YAAY,CAACM,QAAQ,EAAE;MAC3B;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAGpB,SAAS,CAACqB,OAAO;AAC5C,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}